<?php

/**
 * @file
 * Documents API functions for Faker module.
 *
 * All Faker hooks can optionally be defined in modulename.faker.inc.
 */

/**
 * Alter the instantiated faker object.  This gives modules a method for adding
 * custom providers in a centralized place without needing to do it within the
 * generate hook.  See the Faker library documentation for information about
 * creating custom providers.
 *
 * @param $faker An instantiated Faker\Generator object.
 */
function hook_faker_alter($faker) {
  $faker->addProvider(new ExampleProvider($faker));
}

/**
 * Alter a node object that has generated by devel_generate, but before it is
 * saved.  This hook itself is called from hook_node_presave, so anything that
 * can be done to the node object in that hook can also be done here.
 */
function hook_faker_node_generate($node, $faker) {
  if ($node->type == 'bio') {
    $node->title = $faker->name;

    // Generate an opening paragraph, followed by a 2-4 sections comprised of
    // a heading followed by 1-3 paragraphs, each with 5-10 sentences.
    $body = '<p>' . $faker->paragraph(3,5) .'</p>';
    for ($i = 0; $i < rand(2,4); $i++) {
      $body .= '<h3>' . $faker->sentence . '</h3>';
      for ($j = 0; $j < rand(1,3); $j++) {
        $body .= '<p>' . $faker->paragraph(rand(5,10)) . '</p>';
      }
    }
    $node->body['und'][0]['value'] = $body;
    $node->body['und'][0]['format'] = 'full_html';

    $node->field_email['und'][0]['value'] = $faker->email;
    $node->field_phone['und'][0]['value'] = $faker->phoneNumber;
  }
}
